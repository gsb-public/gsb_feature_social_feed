<?php
/**
 * @file
 * Code for the GSB Feature Social Feed feature.
 */

include_once 'gsb_feature_social_feed.features.inc';
/**
 * @file
 * Code for the GSB Feature Social Feed feature.
 */

/**
 * Implements hook_entity_info_alter().
 *
 * Here we tell Drupal about our custom fpp -
 * 'social_feed'.
 *
 */
 function gsb_feature_social_feed_entity_info_alter(&$entity_info) {

  // create the GSB Social Feed FPP

  $entity_info['fieldable_panels_pane']['bundles']['social_feed'] = array(
    'label' => t('Social Feed'),
    'pane category' => t('GSB panes'),
    'pane top level' => TRUE, // set to true to make this show as a top level icon
    'admin' => array(
      'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
      'bundle argument' => 4,
      // Note that this has all _ replaced with - from the bundle name.
      'real path' => 'admin/structure/fieldable-panels-panes/manage/social-feed',
      'access arguments' => array('administer fieldable panels panes'),
    ),
  );

}

/**
 * Implements hook_menu().
 */
function gsb_feature_social_feed_menu() {
  $items['gfsf_user_timeline'] = array(
    'title' => 'User timeline',
    'page callback' => 'gfsf_twitter_user_timeline',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'twitterlib.inc',
    'file path' => drupal_get_path('module', 'gsb_feature_social_feed') .'/includes',
  );
  $items['gfsf_search_tweets'] = array(
    'title' => 'Search tweets',
    'page callback' => 'gfsf_twitter_search_tweets',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'twitterlib.inc',
    'file path' => drupal_get_path('module', 'gsb_feature_social_feed') .'/includes',
  );
  $items['admin/config/services/gfsf_oauth_config'] = array(
    'title' => 'GSB Social Feed OAuth config',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gsb_feature_social_feed_oauth_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Form callback.
 *
 * Configuration form for OAuth tokens.
 */
function gsb_feature_social_feed_oauth_form($form, $form_state) {
  $form = array();

  $form['gfsf_twitter_consumer_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Consumer key'),
    '#default_value' => variable_get('gfsf_twitter_consumer_key', ''),
    '#required' => TRUE,
  );

  $form['gfsf_twitter_consumer_secret'] = array(
    '#type' => 'textfield',
    '#title' => t('Consumer key secret'),
    '#default_value' => variable_get('gfsf_twitter_consumer_secret', ''),
    '#required' => TRUE,
  );

  $form['gfsf_twitter_access_token'] = array(
    '#type' => 'textfield',
    '#title' => t('Access key'),
    '#default_value' => variable_get('gfsf_twitter_access_token', ''),
    '#required' => TRUE,
  );

  $form['gssf_twitter_access_token_secret'] = array(
    '#type' => 'textfield',
    '#title' => t('Access key secret'),
    '#default_value' => variable_get('gssf_twitter_access_token_secret', ''),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Implements hook_fieldable_panels_pane_view().
 */
function gsb_feature_social_feed_fieldable_panels_pane_view($entity, $view_mode, $langcode) {
  if ($entity->bundle != 'social_feed') {
    return;
  }

  $entity->content['#attached']['library'][] = array('gsb_feature_social_feed', 'gsb_tweetfeed');
}

/**
 * Implements hook_library().
 */
function gsb_feature_social_feed_library() {
  $path = drupal_get_path('module', 'gsb_feature_social_feed');
  $libraries['gsb_tweetfeed'] = array(
    'title' => 'GSB Twitterfeed',
    'version' => '1.0',
    'js' => array(
      $path . '/js/gsb_tweetfeed.js' => array('group' => JS_LIBRARY),
      $path . '/js/gsb_feature_social_feed.js' => array('group' => JS_DEFAULT),
    ),
  );
  return $libraries;
}


/*
 * Alter stackla embed form
 */
function gsb_feature_social_feed_form_fieldable_panels_panes_fieldable_panels_pane_content_type_edit_form_alter(&$form, &$form_state, $form_id) {

  if (!empty($form['#bundle']) && $form['#bundle'] == 'embed_stackla' &&  $form['#form_id'] == 'fieldable_panels_panes_fieldable_panels_pane_content_type_edit_form') {
    global $user;
    $form['reusable']['#access'] = FALSE;
    $form['field_widget_code']['#access'] = FALSE;
    if ((in_array('administrator', $user->roles)) || (in_array('marketing_admin', $user->roles))) {
    $form['field_widget_code']['#access'] = TRUE;
   }
  }
  return $form;
}